worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    send_timeout 10;
    types_hash_max_size 2048;
    server_tokens off;

    access_log off;
    error_log /dev/stderr;

    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 443 ssl;
        server_name searchgocloud.com.br;
        ssl_certificate /etc/nginx/certs/certificate.pem;
        ssl_certificate_key /etc/nginx/certs/private.key;
        ssl_client_certificate /etc/nginx/certs/ca.pem; # Opcional, apenas se você quiser configurar a verificação do cliente
        ssl_verify_client optional; # Altere para "on" se você deseja exigir a verificação do cliente

        location / {
            add_header 'Access-Control-Allow-Origin' 'searchgocloud.com.br';
            proxy_pass http://wordpress:80; # Supondo que o serviço do WordPress no docker-compose esteja nomeado como "wordpress"
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name pi-hole.searchgocloud.com.br;
        ssl_certificate /etc/nginx/certs/certificate.pem;
        ssl_certificate_key /etc/nginx/certs/private.key;

        location / {
            add_header 'Access-Control-Allow-Origin' 'pi-hole.searchgocloud.com.br';
            proxy_pass http://pihole:80; # Supondo que o serviço Pi-hole no docker-compose esteja nomeado como "pihole"
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
